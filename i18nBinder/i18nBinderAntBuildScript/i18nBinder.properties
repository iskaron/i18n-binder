######################################################################################################
###                                                                                                ###
###   PROPERTIES OF THE I18NBINDER                                                                 ###
###                                                                                                ###
######################################################################################################


# Folder where the property files are located
i18nDirectory = i18n_src

# Filename of the XLS file 
xlsFilename = i18n_all.xls

# Regular expression filter for locales
localeFilterRegex = .*

# Regular expression pattern which defines the locale extracted from each filename
# by declaring a regular expression group around the locale token.
#
# E.g. ".*?_(\\w{2,3}_\\w{2,3})\\.\\w*" will match the locales like "de_DE" or "en_US".
#
# Or e.g. ".*?((_\\w{2,3}_\\w{2,3})|(_\\w{2,3})|())\\.\\w*" will define the locale at the end of each 
# file before the .properties ending including files with no locale, too.
#
# Hints: This behaves like the Java Pattern class, including the need to encode the pattern. 
#        Groups are defined using the "(" and ")" brackets.
#
#        If you define more than one group, you have to provide the group index of each group
#        matching a locale. This is done with the help of the "fileNameLocaleGroupPatternGroupIndexList" 
#        variable.
#
fileNameLocaleGroupPattern =.*?((_\\w{2,3}_\\w{2,3})|(_\\w{2,3})|())\\.\\w*

# A list of group indexes. If you are not familiar with the regular expression grouping,
# just count the numbers of opening brackets to the point your locale groups starts, beginning with 1, 
# and add each index as comma separated list to this property. 
#
# Within the first example at fileNameLocaleGroupPattern the group index is "1" within the more extended 
# example the group index is a list as following: "2,3,4"
#
fileNameLocaleGroupPatternGroupIndexList = 2,3,4

# The file encoding of the property files
fileEncoding = UTF-8

# Defines if properties with a assigned blank value in the XLS file are deleted 
# when written back to the property files
deletePropertiesWithBlankValue = false

# Logs the current state of the conversion to the console if set to "true"
logInfo = true